     1                                  ;加载器
     2                                  ;从硬盘获取第一个扇区，加载到指定内存中
     3                                  ;获取用户程序头文件：程序大小，程序入口地址
     4                                  ;从硬盘读取剩下用户程序，并加载到内存中
     5                                  ;执行程序
     6                                  
     7                                  app_lba_start equ 100  ;指定用户程序存储扇区100
     8                                  
     9                                  
    10                                  SECTION mbr align=16 vstart=0x7c00 
    11                                  
    12 00000000 4C45454F534C6F6469-     message db "LEEOSLoding"
    12 00000009 6E67               
    13                                  
    14                                  start:
    15                                  
    16                                      ;清屏
    17                                      ;Loding
    18 0000000B B800B8                      mov ax,0xb800
    19 0000000E 8EC0                        mov es,ax
    20                                  
    21 00000010 BE[0000]                    mov si,message
    22 00000013 BF0000                      mov di,0
    23 00000016 B90B00                      mov cx,start-message
    24                                  @g:
    25 00000019 8A04                        mov al,[si]
    26 0000001B 268805                      mov [es:di],al
    27 0000001E 47                          inc di 
    28 0000001F 26C60507                    mov byte [es:di], 0x07
    29 00000023 47                          inc di
    30 00000024 46                          inc si
    31 00000025 E2F2                        loop @g
    32                                  
    33                                      ;设置堆栈段和栈指针 
    34 00000027 B80000                      mov ax,0      
    35 0000002A 8ED0                        mov ss,ax
    36 0000002C 89C4                        mov sp,ax
    37                                  
    38                                      ;加载,
    39 0000002E 2EA1[F000]                  mov ax,[cs:phy_base];段寄存器0，偏移量= (vstart=0x7c00)+(phy_base 偏移量) 
    40 00000032 2E8B16[F200]                mov dx,[cs:phy_base+2];高16位 dx:ax /bx  =ax(商) + dx(余数)
    41 00000037 BB1000                      mov bx,16
    42 0000003A F7F3                        div bx  ;32位除法，ax=1000,
    43                                  
    44 0000003C 8ED8                        mov ds,ax
    45 0000003E 8EC0                        mov es,ax
    46 00000040 31FF                        xor di,di
    47 00000042 BE6400                      mov si,app_lba_start            ;程序在硬盘上的起始逻辑扇区号 
    48 00000045 31DB                        xor bx,bx     
    49 00000047 E85100                      call read_hard_disk_0
    50                                  
    51                                  
    52                                      ;获取用户程序信息
    53                                      ;获取程序大小，并计算扇区数
    54 0000004A 8B160200                    mov dx,[2]
    55 0000004E A10000                      mov ax,[0]
    56 00000051 BB0002                      mov bx,512
    57 00000054 F7F3                        div bx
    58 00000056 83FA00                      cmp dx,0
    59 00000059 7501                        jnz @1                          ;未除尽，因此结果比实际扇区数少1 
    60 0000005B 48                          dec ax                          ;已经读了一个扇区，扇区总数减1  
    61                                  
    62                                  @1:
    63 0000005C 83F800                      cmp ax,0                        ;考虑实际长度小于等于512个字节的情况 
    64 0000005F 7413                        jz direct
    65                                      
    66                                      ;读取剩余的扇区
    67 00000061 1E                          push ds                         ;以下要用到并改变DS寄存器 
    68                                  
    69 00000062 89C1                        mov cx,ax                       ;循环次数（剩余扇区数）
    70                                  @2:
    71 00000064 8CD8                        mov ax,ds
    72 00000066 83C020                      add ax,0x20                     ;得到下一个以512字节为边界的段地址
    73 00000069 8ED8                        mov ds,ax  
    74                                                          
    75 0000006B 31DB                        xor bx,bx                       ;每次读时，偏移地址始终为0x0000 
    76 0000006D 46                          inc si                          ;下一个逻辑扇区 
    77 0000006E E82A00                      call read_hard_disk_0
    78 00000071 E2F1                        loop @2                         ;循环读，直到读完整个功能程序 
    79                                  
    80 00000073 1F                          pop ds                          ;恢复数据段基址到用户程序头部段 
    81                                  
    82                                      ;计算入口点代码段基址 
    83                                  direct:
    84 00000074 8B160800                        mov dx,[0x08]
    85 00000078 A10600                          mov ax,[0x06]
    86 0000007B E85900                          call calc_segment_base
    87 0000007E A30600                          mov [0x06],ax                   ;回填修正后的入口点代码段基址 
    88                                      
    89                                          ;开始处理段重定位表
    90 00000081 8B0E0A00                        mov cx,[0x0a]                   ;需要重定位的项目数量
    91 00000085 BB0C00                          mov bx,0x0c                     ;重定位表首地址
    92                                  
    93                                   realloc:
    94 00000088 8B5702                           mov dx,[bx+0x02]                ;32位地址的高16位 
    95 0000008B 8B07                             mov ax,[bx]
    96 0000008D E84700                           call calc_segment_base
    97 00000090 8907                             mov [bx],ax                     ;回填段的基址
    98 00000092 83C304                           add bx,4                        ;下一个重定位项（每项占4个字节） 
    99 00000095 E2F1                             loop realloc 
   100                                        
   101 00000097 FF2E0400                         jmp far [0x04]                  ;转移到用户程序  
   102                                  
   103                                  read_hard_disk_0:
   104 0000009B 50                          push ax
   105 0000009C 53                          push bx
   106 0000009D 51                          push cx
   107 0000009E 52                          push dx
   108                                  
   109                                      ;要读取的扇区数
   110 0000009F BAF201                      mov dx,0x1f2
   111 000000A2 B001                        mov al,1
   112 000000A4 EE                          out dx,al
   113                                      ;0-7位
   114 000000A5 42                          inc dx
   115 000000A6 89F0                        mov ax,si;16位 100
   116 000000A8 88C0                        mov al,al
   117 000000AA EE                          out dx,al
   118                                  
   119                                      ;8-15位
   120 000000AB 42                          inc dx
   121 000000AC 88E0                        mov al,ah
   122 000000AE EE                          out dx,al
   123                                      ;16-23位
   124 000000AF 42                          inc dx
   125 000000B0 89F8                        mov ax,di
   126 000000B2 EE                          out dx,al
   127                                  
   128                                      ;24-27位，状态
   129 000000B3 42                          inc dx
   130 000000B4 B0E0                        mov al,0xe0                     ;LBA28模式，主盘
   131 000000B6 08E0                        or al,ah                        ;LBA地址27~24
   132 000000B8 EE                          out dx,al
   133                                  
   134 000000B9 42                          inc dx                          ;0x1f7
   135 000000BA B020                        mov al,0x20                     ;读命令
   136 000000BC EE                          out dx,al
   137                                  
   138                                  .waits:
   139 000000BD EC                          in al,dx ;0x1f7
   140 000000BE 2488                        and al,0x88
   141 000000C0 3C08                        cmp al,0x08
   142 000000C2 75F9                        jnz .waits                      ;不忙，且硬盘已准备好数据传输
   143                                  
   144 000000C4 B90001                      mov cx,256                      ;总共要读取的字数
   145 000000C7 BAF001                      mov dx,0x1f0
   146                                  .readw:
   147 000000CA ED                          in  ax,dx
   148 000000CB 8907                        mov [bx],ax
   149 000000CD 83C302                      add bx,2
   150 000000D0 E2F8                        loop .readw
   151                                  
   152 000000D2 5A                          pop dx
   153 000000D3 59                          pop cx
   154 000000D4 5B                          pop bx
   155 000000D5 58                          pop ax
   156                                  
   157 000000D6 C3                          ret
   158                                  ;-------------------------------------------------------------------------------
   159                                  calc_segment_base:                       ;计算16位段地址
   160                                                                           ;输入：DX:AX=32位物理地址
   161                                                                           ;返回：AX=16位段基地址 
   162 000000D7 52                               push dx                          
   163                                           
   164 000000D8 2E0306[F000]                     add ax,[cs:phy_base]
   165 000000DD 2E1316[F200]                     adc dx,[cs:phy_base+0x02]
   166 000000E2 C1E804                           shr ax,4
   167 000000E5 C1CA04                           ror dx,4
   168 000000E8 81E200F0                         and dx,0xf000
   169 000000EC 09D0                             or ax,dx
   170                                           
   171 000000EE 5A                               pop dx
   172                                           
   173 000000EF C3                               ret
   174                                  
   175                                  ;-------------------------------------------------------------------------------
   176                                  
   177                                  ;-------------------------------------------------------------------------------
   178 000000F0 00000100                    phy_base dd 0x10000             ;用户程序被加载的物理起始地址
   179                                  
   180                                  
   181 000000F4 00<rep 10Ah>             times 510-($-$$) db 0
   182 000001FE 55AA                                      db 0x55,0xaa
   183                                  
